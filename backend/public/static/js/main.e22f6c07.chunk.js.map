{"version":3,"sources":["services/bugService.js","cmps/bugs/BugForm.js","pages/BugEdit.js","services/storageService.js","services/userService.js","cmps/Loggedin.js","pages/BugDetails.js","cmps/bugs/BugPreview.js","cmps/bugs/BugList.js","pages/BugApp.js","pages/Login.js","cmps/NavBar.js","pages/UserDetails.js","pages/NotFound.js","cmps/users/UserPreview.js","cmps/users/UserList.js","pages/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["Axios","axios","create","withCredentials","query","filterBy","get","then","res","data","catch","err","deleteBug","bugId","console","log","delete","prompt","addBug","title","desc","sev","post","getBugById","editBug","id","description","severity","bug","put","getCreatorBugCount","creator","bugs","reduce","acc","name","BugForm","state","onSave","props","setState","imgUrl","goBack","history","push","_id","inputChange","ev","fieldName","target","value","this","setFormDataForEdit","prevProps","className","type","placeholder","onChange","onClick","React","Component","BugEdit","onEditBug","bugService","reLoad","loadBug","match","params","store","key","any","localStorage","JSON","stringify","load","str","parse","checkCredentials","loginData","answer","user","storageService","saveLoggedin","getLoggedinUser","logout","CONTACT_URL","clear","getUserById","userId","LoggedinUser","onLogout","userService","loadLoggedinUser","loggedin","userName","to","BugDetails","onDelete","Fragment","createdAt","loggedIn","isAdmin","BugPreview","BugList","map","i","BugApp","numOfLegs","loadBugs","onFilter","component","path","exact","render","Login","password","onLogin","preventDefault","NavBar","activeClassName","bugCnt","deleteUser","NotFound","UserPreview","UserList","users","UserPage","loadUsers","alert","Array","isArray","createBrowserHistory","App","UserDetails","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e22f6c07.chunk.js","sourcesContent":["import axios from 'axios'\r\n// import { Link } from 'react-router-dom';\r\nconst CONTACT_URL = (process.env.NODE_ENV !== 'development') ? '/api/bug/' : 'http://localhost:3002/api/bug/';\r\n\r\nconst Axios = axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    deleteBug,\r\n    addBug,\r\n    getBugById,\r\n    editBug,\r\n    getCreatorBugCount\r\n};\r\n\r\n\r\nfunction query(filterBy) {\r\n    // return  axios.get(`/api/bug?name=${filterBy.name}&numOfLegs=${filterBy.numOfLegs}`).then(res=> res.data)\r\n    return Axios.get(CONTACT_URL).then(res => {\r\n        return res.data\r\n    }).catch(err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n\r\nfunction getBugById(bugId) {\r\n    return Axios.get(CONTACT_URL + bugId).then(res => res.data)\r\n    .catch(err => {\r\n        throw err\r\n    });\r\n}\r\n\r\nfunction getCreatorBugCount(creator) {\r\n    return Axios.get(CONTACT_URL)\r\n        .then(res => res.data)\r\n        .then(bugs => bugs.reduce((acc, bug) =>\r\n            (bug.creator.name === creator) ? acc + 1 : acc\r\n            , 0))\r\n}\r\n\r\nfunction editBug(id, title, description, severity) {\r\n    var bug = { title, description, severity }\r\n    return Axios.put(CONTACT_URL + id, bug).then(res => res.data);\r\n}\r\n\r\nfunction addBug(title, desc, sev) {\r\n    return Axios.post(CONTACT_URL, { title, desc, sev }).then(res => res.data);\r\n}\r\n\r\nfunction deleteBug(bugId) {\r\n    console.log(bugId)\r\n    return Axios.delete(CONTACT_URL + bugId).then(res => res.data).catch(prompt('could not delete!'));\r\n}\r\n","import React from 'react';\r\nexport default class BugForm extends React.Component {\r\n    state = {\r\n        title: '',\r\n        description: '',\r\n        severity: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setFormDataForEdit();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bug !== this.props.bug) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        const { bug } = this.props;\r\n        if (bug) {\r\n            this.setState({ title: bug.title, description: bug.description, severity: bug.severity })\r\n        }\r\n    }\r\n\r\n    onSave = () => {\r\n        this.props.onSave(this.state.title, this.state.description, this.state.severity).catch()\r\n        this.setState({ name: '', imgUrl: '' })\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.history.push(`/bugs/${this.props.bug._id}`)\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name\r\n        this.setState({ [fieldName]: ev.target.value })\r\n    }\r\n\r\n    render() {\r\n        return <div className='container flex column bug-form'>\r\n            <label>Title:</label>\r\n            <input type=\"text\" placeholder=\"title\" name=\"title\"\r\n                onChange={this.inputChange} value={this.state.title}></input>\r\n            <label>Description:</label>\r\n            <input type=\"text\" placeholder=\"bug description\" name=\"description\"\r\n                onChange={this.inputChange} value={this.state.description}></input>\r\n            <label>Severity:</label>\r\n            <input type=\"number\" placeholder=\"severity\" name=\"severity\"\r\n                onChange={this.inputChange} value={this.state.severity}></input>\r\n\r\n            <div className='flex justify-around'>\r\n                <button className='btn' onClick={this.goBack}>Back</button>\r\n                <button className='btn' onClick={this.onSave}>Save</button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import PetForm from \"../cmps/pets/PetForm\";\r\nimport bugService from \"../services/bugService.js\";\r\nimport BugForm from '../cmps/bugs/BugForm.js';\r\n\r\nexport default class BugEdit extends Component {\r\n    state = {\r\n        bug: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBug();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id\r\n            !== this.props.match.params.id) {\r\n            this.loadBug();\r\n        }\r\n    }\r\n\r\n    loadBug() {\r\n        bugService.getBugById(this.props.match.params.id).then(bug => {\r\n            this.setState({ bug })\r\n        })\r\n    }\r\n\r\n    onEditBug = (title, description, severity) => {\r\n        return bugService.editBug(this.state.bug._id, title, description, severity).then(bug => {\r\n            this.props.reLoad()\r\n            this.props.history.push('/bugs/' + bug._id);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            <BugForm history={this.props.history} bug={this.state.bug} onSave={this.onEditBug}></BugForm>\r\n        </div>\r\n    }\r\n} ","\r\nfunction store(key, any) {\r\n    localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction load(key) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n}\r\n\r\nexport default{\r\n    store,\r\n    load\r\n}","import storageService from './storageService.js'\r\nimport axios from 'axios'\r\n\r\nconst CONTACT_URL = (process.env.NODE_ENV !=='development')? 'api/user/':'http://localhost:3002/api/user/';\r\nconst Axios = axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    checkCredentials,\r\n    getLoggedinUser,\r\n    query,\r\n    logout,\r\n    getUserById\r\n};\r\n\r\nfunction query() {\r\n    return Axios.get(CONTACT_URL)\r\n        .then(res => res.data)\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nfunction checkCredentials(loginData) {\r\n    return Axios.post(CONTACT_URL, loginData)\r\n        .then(res => res.data.answer)\r\n        .then(user => saveLoggedin(user));\r\n\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    let loggedIn = storageService.load('loggedinUser')\r\n    return loggedIn\r\n}\r\nfunction getUserById(userId) {\r\n    return Axios.get(CONTACT_URL + userId).then(res => res.data);\r\n}\r\n\r\nfunction logout() {\r\n    return Axios.post(CONTACT_URL + 'logout')\r\n        .then(() => {\r\n            localStorage.clear();\r\n        })\r\n}\r\nfunction saveLoggedin(user) {\r\n    storageService.store('loggedinUser', user)\r\n}","import userService from '../services/userService.js'\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class LoggedinUser extends Component {\r\n    state = {\r\n        user: ''\r\n    }\r\n    componentDidMount() {\r\n        this.loadLoggedinUser()\r\n    }\r\n\r\n    loadLoggedinUser() {\r\n        const loggedin = userService.getLoggedinUser()\r\n        this.setState({ user: loggedin })\r\n    }\r\n\r\n    onLogout = () => {\r\n        userService.logout().then(() => this.props.history.push('/login'))\r\n    }\r\n    render() {\r\n        const { user } = this.state\r\n        return <div className='container logged-container'>\r\n            {`Welcome, ${user ? user.userName : 'guest'}`}\r\n            {user && <button className='btn logout' onClick={this.onLogout}>Logout</button>}\r\n            {user && (user.userName === 'admin') && <Link className='btn logout' to='/users/'>Users List</Link>}\r\n        </div >\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport bugService from '../services/bugService.js'\r\nimport userService from '../services/userService.js'\r\n\r\nexport default class BugDetails extends Component {\r\n\r\n    state = {\r\n        bug: null\r\n    }\r\n    componentDidMount() {\r\n        this.loadBug();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id\r\n            !== this.props.match.params.id) {\r\n            this.loadBug();\r\n        }\r\n    }\r\n\r\n    loadBug() {\r\n        const { id } = this.props.match.params;\r\n        bugService.getBugById(id).then(bug => {\r\n            this.setState({ bug })\r\n        }).catch(err=>{\r\n         this.props.history.push('/login')\r\n        })\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.history.push('/bugs')\r\n    }\r\n\r\n    onDelete = () => {\r\n        bugService.deleteBug(this.state.bug._id).then(() => {\r\n            this.props.history.push('/bugs')\r\n        });\r\n    }\r\n    get loggedIn() {\r\n        return userService.getLoggedinUser()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.bug) return <div className=\"loading\">Loading...</div>\r\n        const { bug } = this.state;\r\n        return <React.Fragment>\r\n            <table className='container'>\r\n                <tbody className=\"table-fill\">\r\n\r\n                    <tr><td>createdAt</td><td>{bug.createdAt}</td></tr>\r\n                    <tr><td>Severity</td><td>{bug.severity}</td></tr>\r\n                    <tr><td>Title</td><td>{bug.title}</td></tr>\r\n                    <tr><td>Description</td><td>{bug.description}</td></tr>\r\n                    <tr><td>Creator's name</td><td>{bug.creator.name}</td></tr>\r\n                </tbody>\r\n            </table>\r\n            <div className='container action-btns flex justify-center'>\r\n                <button className='btn' onClick={this.goBack}>BACK</button>\r\n                <Link to={`/bugs/${bug._id}/edit`} ><button className='btn'>Edit</button></Link>\r\n                {(this.loggedIn.userName === bug.creator.name) && <button className='btn warning' onClick={this.onDelete}>Delete</button>}\r\n                {this.loggedIn.isAdmin && <button className='btn warning' onClick={this.onDelete}>Delete</button>}\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function BugPreview(props) {\r\n    const { bug } = props;\r\n    return <tr>\r\n        <td>{bug.severity}</td>\r\n        <td><Link to={`/bugs/${bug._id}`}>{bug.title}</Link></td>\r\n        <td>{bug.description}</td>\r\n        <td>{bug.creator.name}</td>\r\n    </tr>\r\n\r\n}","import React from 'react';\r\n\r\nimport BugPreview from \"./BugPreview.js\";\r\n\r\nexport default function BugList(props) {\r\n    return <table>\r\n        <tbody className='table-fill'>\r\n            <tr>\r\n                <th>Severity</th>\r\n                <th>Title</th>\r\n                <th>Description</th>\r\n                <th>Creator</th>\r\n            </tr>\r\n            {props.bugs.map((bug, i) => <BugPreview key={i} bug={bug}></BugPreview>)}\r\n        </tbody>\r\n    </table>\r\n}","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport BugEdit from './BugEdit.js'\r\nimport Loggedin from '../cmps/Loggedin.js'\r\nimport BugDetails from './BugDetails.js'\r\nimport BugList from '../cmps/bugs/BugList.js'\r\nimport bugService from '../services/bugService.js'\r\n\r\nexport default class BugApp extends Component {\r\n    state = {\r\n        bugs: null,\r\n        filterBy: { name: '', numOfLegs: 4 }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBugs();\r\n    }\r\n\r\n    loadBugs = () => {\r\n        bugService.query(this.state.filterBy).then(bugs => {\r\n            this.setState({ bugs })\r\n        }).catch((err) => {\r\n            this.props.history.push('/login')\r\n        });\r\n    }\r\n\r\n    onFilter = (filterBy) => {\r\n        this.setState({ filterBy }, this.loadBugs);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.bugs) return <div>Loading....</div>\r\n        return (\r\n            <Router history={this.props.history}>\r\n                <Loggedin history={this.props.history}></Loggedin>\r\n                <Switch>\r\n                    <Route component={BugDetails} path=\"/bugs/:id\" exact></Route>\r\n                    <Route render={(props) => <BugEdit {...props} reLoad={this.loadBugs} />} \r\n                    path=\"/bugs/:id/edit\" exact></Route>\r\n                    <Route path='/bugs'>\r\n                        <section className='container'>\r\n                            {/* <Filter onFilter={this.onFilter}></Filter> */}\r\n                            <BugList bugs={this.state.bugs}></BugList>\r\n                        </section>\r\n                    </Route>\r\n\r\n                </Switch>\r\n\r\n            </Router>\r\n\r\n        )\r\n    }\r\n}","import userService from \"../services/userService.js\"\r\nimport React, { Component } from 'react';\r\nexport default class Login extends Component {\r\n    state = { userName: '',password:'' }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name\r\n        this.setState({ [fieldName]: ev.target.value })\r\n    }\r\n\r\n    onLogin = (ev) => {\r\n        ev.preventDefault();\r\n        userService.checkCredentials(this.state).then(() => this.props.history.push('/bugs'))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className='login-container'>\r\n                <form className='flex column justify-center'>\r\n                    <input type=\"text\" placeholder=\"username\" name=\"userName\"\r\n                        onChange={this.inputChange} value={this.state.name} />\r\n                    <input type=\"password\" placeholder=\"password\" name=\"password\" onChange={this.inputChange} />\r\n                    <button onClick={this.onLogin}>Login</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink,Link} from 'react-router-dom'\r\n\r\nexport default function NavBar(props) {\r\n    return <nav>\r\n        <ul className='main-menu clean-list flex justify-around align-center'>\r\n            <li><h1><Link to='/bugs'>Bugs</Link></h1></li>\r\n            <li><NavLink activeClassName=\"active\" to='/login' exact>Login</NavLink></li>\r\n            <li><NavLink activeClassName=\"active\" to='/bugs' exact>Bugs</NavLink></li>\r\n        </ul>\r\n    </nav>\r\n}","import React, { Component } from 'react';\r\nimport userService from '../services/userService.js'\r\nimport bugService from '../services/bugService.js'\r\n\r\n\r\nexport default class BugDetails extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n        bugCnt:0\r\n    }\r\n    componentDidMount() {\r\n        this.loadBug();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id\r\n            !== this.props.match.params.id) {\r\n            this.loadBug();\r\n        }\r\n    }\r\n\r\n    loadBug() {\r\n        const { id } = this.props.match.params;\r\n        userService.getUserById(id).then(user => {\r\n            this.setState({ user })\r\n            bugService.getCreatorBugCount(user.userName)\r\n                .then(bugCnt => this.setState({ bugCnt }))\r\n        })\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.history.push('/users')\r\n        // this.props.history.goBack()\r\n    }\r\n\r\n    onDelete = () => {\r\n        userService.deleteUser(this.state.user._id).then(() => {\r\n            this.props.history.push('/users')\r\n        });\r\n    }\r\n    get loggedIn() {\r\n        return userService.getLoggedinUser()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) return <div className=\"loading\">Loading...</div>\r\n        const { user } = this.state;\r\n        return <React.Fragment>\r\n            <table className='container'>\r\n                <tbody className=\"table-fill\">\r\n                    <tr><td>User name</td><td>{user.userName}</td></tr>\r\n                    <tr><td>password</td><td>{user.password}</td></tr>\r\n                    <tr><td>is Admin?</td><td>{user.isAdmin ? 'Yes' : 'No'}</td></tr>\r\n                    <tr><td>Bugs count</td><td>{this.state.bugCnt}</td></tr>\r\n                </tbody>\r\n            </table>\r\n            <div className='container action-btns flex justify-center'>\r\n                <button className='btn' onClick={this.goBack}>BACK</button>\r\n                <button className='btn warning' onClick={this.onDelete}>Delete</button>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n}","import userService from '../services/userService.js'\r\nexport default function NotFound(props){\r\n\r\n    if(userService.getLoggedinUser()) props.history.push('/bugs')\r\n    else props.history.push('/login')\r\n    return 'Not Found'\r\n}","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nexport default class UserPreview extends Component {\r\n\r\n    render() {\r\n        const { props } = this;\r\n        return <tr>\r\n             <td><Link to={`/users/${props.user._id}`}>{props.user.userName}</Link></td> \r\n            <td>{props.user.password}</td>\r\n            <td>{props.user.isAdmin? 'Yes':'No'}</td>\r\n            </tr>\r\n\r\n    }\r\n}","import UserPreview from './UserPreview.js'\r\nimport React from 'react';\r\nexport default function UserList(props) {\r\n    return <table>\r\n        <tbody className='table-fill'>\r\n            <tr>\r\n                <th>User Name</th>\r\n                <th>Password</th>\r\n                <th>Admin?</th>\r\n            </tr>\r\n            {props.users.map((user) => <UserPreview key={user._id} user={user}></UserPreview>)}\r\n        </tbody>\r\n    </table>\r\n}","import React, { Component } from 'react';\r\n\r\nimport userService from '../services/userService.js'\r\nimport UserList from '../cmps/users/UserList.js'\r\nexport default class UserPage extends Component {\r\n    state = {\r\n        users: null\r\n    }\r\n    componentDidMount() {\r\n        this.loadUsers()\r\n    }\r\n    loadUsers() {\r\n        userService.query().then(users => this.setState({ users })).catch(err=>alert(err))\r\n    }\r\n\r\n    render() {\r\n        if(!Array.isArray(this.state.users)) return <div>Loading....</div>\r\n        return <div className='container'>\r\n            <h2>Users</h2>\r\n            {console.log(this.state.users)}\r\n            <UserList users={this.state.users}></UserList>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport BugApp from './pages/BugApp.js'\nimport Login from './pages/Login.js'\nimport NavBar from './cmps/NavBar.js'\nimport UserDetails from './pages/UserDetails.js'\nimport NotFound from './pages/NotFound.js'\nimport UserPage from './pages/UserPage.js'\n\nimport './assets/styles/global.scss';\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n\n  render() {\n    \n     return (\n        <main>\n           <Router history={history}>\n              <NavBar></NavBar>\n              <Switch>\n                 <Route component={Login} path=\"/login\"></Route>\n                 <Route component={UserPage} path=\"/users\" exact></Route>\n                 <Route component={UserDetails} path=\"/users/:id/\" exact></Route>\n                 <Route component={BugApp} path=\"/bugs\"></Route>\n                 <Route component={NotFound} path=\"/\"></Route>\n              </Switch>\n           </Router>\n        </main>\n     )\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}